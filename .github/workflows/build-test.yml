name: Build and test

on:
  workflow_dispatch: # enable run button on github.com
  pull_request:
  schedule:
    - cron: "03 00 * * 4" # Run every Thursday at 12:03am

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: "./package-lock.json"
      - name: Install dependencies
        run: npm install
      - name: Build site and test
        run: npm run build

      - name: Create report directory
        run: mkdir -p _accessibility-reports

      - run: npm run dev &

      - name: Wait for server to be ready
        run: |
          attempt_counter=0
          max_attempts=20
          until $(curl --output /dev/null --silent --head --fail http://localhost:8080); do
            if [ ${attempt_counter} -eq ${max_attempts} ];then
              echo "Max attempts reached. Server not started."
              exit 1
            fi
            printf '.'
            attempt_counter=$((attempt_counter+1))
            sleep 5
          done

      - name: Scan site
        id: scan
        uses: double-great/accessibility-scan-action@main
        with:
          url: "http://localhost:8080"

      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: "Accessibility report"
          path: ${{ github.workspace }}/_accessibility-reports/

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ steps.scan.outputs['summary-report'] }}`
            })
